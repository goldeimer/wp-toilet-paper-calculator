{"version":3,"sources":["webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/md5.js/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/mini-create-react-context/dist/cjs/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/minimalistic-assert/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/minimalistic-crypto-utils/lib/utils.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/nanoid-dictionary/nolookalikes.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/nanoid-generate/nolookalikes.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/nanoid/format.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/nanoid/generate.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/nanoid/random.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/notistack/dist/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/notistack/dist/notistack.cjs.production.min.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/object-assign/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/utils/common.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/adler32.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/constants.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/crc32.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/deflate.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/inffast.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/inflate.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/inftrees.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/messages.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/trees.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pako/lib/zlib/zstream.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/papaparse/papaparse.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/parse-asn1/asn1.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/parse-asn1/certificate.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/parse-asn1/fixProc.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/parse-asn1/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/path-to-regexp/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/path-to-regexp/node_modules/isarray/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pbkdf2/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pbkdf2/lib/async.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pbkdf2/lib/default-encoding.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pbkdf2/lib/precondition.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pbkdf2/lib/sync.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/pbkdf2/lib/to-buffer.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/popper.js/dist/umd/popper.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/process-nextick-args/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/process/browser.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/prop-types/factoryWithThrowingShims.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/prop-types/index.js","webpack://@goldeimer/wp-toilet-paper-calculator/../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"names":["inherits","HashBase","Buffer","ARRAY16","Array","MD5","call","this","_a","_b","_c","_d","rotl","x","n","fnF","a","b","c","d","m","k","s","fnG","fnH","fnI","prototype","_update","M","i","_block","readInt32LE","_digest","_blockOffset","fill","writeUInt32LE","_length","buffer","allocUnsafe","writeInt32LE","module","exports","React","_inheritsLoose","PropTypes","_interopDefaultLegacy","e","React__default","_inheritsLoose__default","PropTypes__default","MAX_SIGNED_31_BIT_INT","commonjsGlobal","globalThis","window","g","createEventEmitter","value","handlers","on","handler","push","off","filter","h","get","set","newValue","changedBits","forEach","index","createContext","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","key","contextProp","Provider","_Component","_this","apply","arguments","emitter","props","_proto","getChildContext","_ref","componentWillReceiveProps","nextProps","oldValue","y","render","children","Component","childContextTypes","object","isRequired","Consumer","_Component2","_this2","state","getValue","onUpdate","observedBits","setState","_proto2","componentDidMount","context","componentWillUnmount","isArray","contextTypes","assert","val","msg","Error","equal","l","r","utils","zero2","word","length","toHex","res","toString","toArray","enc","slice","replace","parseInt","charCodeAt","hi","lo","encode","arr","generate","nolookalikes","bind","random","alphabet","size","mask","Math","clz32","step","ceil","id","bytes","format","crypto","randomFillSync","buffers","randomBytes","default","t","o","u","p","Object","assign","hasOwnProperty","keys","indexOf","f","root","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","containerRoot","containerAnchorOriginTopCenter","containerAnchorOriginBottomCenter","containerAnchorOriginTopRight","containerAnchorOriginBottomRight","containerAnchorOriginTopLeft","containerAnchorOriginBottomLeft","charAt","toUpperCase","reduce","v","variant","autoHideDuration","anchorOrigin","vertical","horizontal","CLICKAWAY","MAXSNACK","INSTRUCTED","E","forwardRef","classes","className","createElement","ref","S","withStyles","createStyles","display","flexWrap","flexGrow","breakpoints","up","minWidth","O","right","left","bottom","top","D","w","wrappedRoot","L","container","collapseContainer","wrapper","collapseWrapper","collapseWrapperDense","q","concat","R","emphasize","palette","background","type","lessPadding","paddingLeft","variantSuccess","backgroundColor","color","variantError","variantInfo","variantWarning","contentRoot","typography","body2","getContrastText","alignItems","padding","borderRadius","boxShadow","message","action","marginLeft","marginRight","position","transform","down","spacing","paddingRight","transition","transitions","create","easing","marginTop","marginBottom","useRef","useState","useEffect","current","clearTimeout","snack","onClose","content","ariaAttributes","C","hideIconVariant","iconVariant","T","A","dense","TransitionComponent","I","N","TransitionProps","H","j","V","P","z","W","B","X","_","K","U","Z","Q","G","direction","onExited","setTimeout","Y","F","unmountOnExit","timeout","in","open","onExit","onExiting","onEnter","onEntering","onEntered","requestClose","INSTRCUTED","role","makeStyles","boxSizing","maxHeight","maxWidth","flexDirection","zIndex","snackbar","height","width","reverseColumns","topDense","bottomDense","leftDense","rightDense","center","memo","fontSize","marginInlineEnd","success","style","warning","error","info","enqueueSnackbar","preventDuplicate","Date","getTime","entered","persist","queue","findIndex","snacks","handleDisplaySnack","maxSnack","handleDismissOldest","processQueue","some","map","handleEnteredSnack","handleCloseSnack","closeSnackbar","find","handleExitedSnack","contextValue","constructor","__proto__","domRoot","createPortal","enumerable","configurable","writable","defineProperty","useSnackbar","useContext","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","TypeError","test1","String","getOwnPropertyNames","test2","fromCharCode","join","test3","split","letter","err","shouldUseNative","target","source","from","symbols","to","TYPED_OK","Uint8Array","Uint16Array","Int32Array","_has","obj","sources","shift","shrinkBuf","buf","subarray","fnTyped","arraySet","dest","src","src_offs","len","dest_offs","flattenChunks","chunks","pos","chunk","result","fnUntyped","setTyped","Buf8","Buf16","Buf32","adler","s1","s2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","crcTable","table","makeTable","crc","end","configuration_table","trees","adler32","crc32","MAX_MATCH","MIN_LOOKAHEAD","HCRC_STATE","BUSY_STATE","FINISH_STATE","strm","errorCode","rank","zero","flush_pending","pending","avail_out","output","pending_buf","pending_out","next_out","total_out","flush_block_only","last","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","longest_match","cur_match","match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","prev","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","str","start","_w_size","window_size","hash_size","head","avail_in","input","next_in","wrap","total_in","insert","ins_h","hash_shift","hash_mask","deflate_fast","flush","hash_head","bflush","match_length","_tr_tally","max_lazy_match","MIN_MATCH","last_lit","deflate_slow","max_insert","prev_match","strategy","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","DeflateState","status","pending_buf_size","gzhead","gzindex","method","last_flush","w_bits","hash_bits","level","dyn_ltree","HEAP_SIZE","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","deflateReset","ret","deflateInit2","windowBits","memLevel","max_block_size","max_start","deflateInit","deflateSetHeader","deflate","old_flush","beg","text","hcrc","extra","name","comment","time","os","header","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","deflateEnd","deflateSetDictionary","dictionary","avail","next","tmpDict","dictLength","deflateInfo","_in","_out","dmax","wsize","whave","wnext","s_window","hold","bits","lcode","dcode","lmask","dmask","here","op","dist","from_source","lencode","distcode","lenbits","distbits","dolen","mode","dodist","sane","inflate_fast","inflate_table","TYPE","BAD","zswap32","InflateState","havedict","flags","check","total","wbits","offset","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","sym","updatewindow","copy","inflateInit","inflate","put","here_bits","here_op","here_val","last_bits","last_op","last_val","opts","hbuf","order","inf_leave","done","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","inflateInfo","MAXBITS","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","low","min","max","curr","drop","used","huff","base","base_index","count","offs","extra_index","2","1","0","LITERALS","L_CODES","D_CODES","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","tree","bi_reverse","code","gen_codes","next_code","init_block","END_BLOCK","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","desc","node","stree","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","stored_len","copy_block","LENGTH_CODES","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","moduleFactory","global","self","getWorkerBlob","URL","webkitURL","Papa","BLOB_URL","createObjectURL","Blob","IS_WORKER","document","postMessage","IS_PAPA_WORKER","test","location","protocol","workers","workerIdCounter","parse","CsvToJson","unparse","JsonToCsv","RECORD_SEP","UNIT_SEP","BYTE_ORDER_MARK","BAD_DELIMITERS","WORKERS_SUPPORTED","Worker","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","PAPA_BROWSER_CONTEXT","DuplexStreamStreamer","jQuery","$","fn","options","config","each","idx","prop","attr","toLowerCase","FileReader","files","file","inputElem","instanceConfig","extend","parseNextFile","isFunction","before","returned","reason","fileComplete","userCompleteFunc","complete","results","elem","splice","_input","_config","dynamicTyping","dynamicTypingFunction","worker","newWorker","userStep","userChunk","userComplete","userError","workerId","streamer","getStream","download","readable","read","File","stream","_quotes","_writeHeader","_delimiter","_newline","_quoteChar","_escapedQuote","_skipEmptyLines","_columns","_escapeFormulae","unpackConfig","quoteCharRegex","RegExp","escapeRegExp","JSON","serialize","objectKeys","data","fields","meta","delimiter","quotes","skipEmptyLines","newline","quoteChar","columns","undefined","escapeChar","escapeFormulae","csv","hasHeader","dataKeyedByField","safe","row","maxCol","emptyLine","nullLine","trim","line","cx","col","colIdx","stringify","escapedQuoteStr","hasAny","substrings","ChunkStreamer","replaceConfig","configCopy","chunkSize","_handle","_finished","_completed","_halted","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","parseChunk","isFakeChunk","beforeFirstChunk","modifiedChunk","aggregate","paused","aborted","lastIndex","cursor","substring","finishedIncludingPreview","preview","WORKER_ID","finished","_sendError","xhr","getFileSize","contentRange","getResponseHeader","lastIndexOf","_readChunk","_chunkLoaded","url","XMLHttpRequest","withCredentials","onload","bindFunction","onerror","_chunkError","downloadRequestBody","downloadRequestHeaders","headers","headerName","setRequestHeader","send","readyState","responseText","errorMessage","errorText","statusText","reader","usingAsyncReader","webkitSlice","mozSlice","FileReaderSync","txt","readAsText","encoding","event","remaining","parseOnData","streamHasEnded","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","Duplex","parseOnWrite","writeStreamHasFinished","parseCallbackQueue","_onCsvData","_onCsvComplete","_addToParseQueue","callback","_onRead","_onWrite","_onWriteComplete","readableObjectMode","decodeStrings","write","once","_parser","_delimiterError","MAX_FLOAT","pow","MIN_FLOAT","FLOAT","ISO_DATE","_stepCounter","_rowCounter","_paused","_aborted","_fields","_results","needsHeaderRow","processResults","abort","testEmptyLine","testFloat","floatValue","parseFloat","addError","fillHeaderFields","applyHeaderAndDynamicTypingAndTransformation","addHeader","transformHeader","shouldApplyDynamicTyping","field","parseDynamic","processRow","rowSource","incrementBy","guessDelimiter","comments","delimitersToGuess","bestDelim","bestDelta","fieldCountPrevRow","maxFieldCount","delim","delta","avgFieldCount","emptyLinesCount","fieldCount","abs","successful","bestDelimiter","guessLineEndings","re","nAppearsFirst","numWithN","baseIndex","ignoreLastRow","delimGuess","parserConfig","getCharIndex","string","fastMode","inputLen","delimLen","newlineLen","commentsLen","stepIsFunction","lastCursor","returnable","rows","pushRow","doStep","nextDelim","nextNewline","quoteSearch","nextDelimObj","getNextUnquotedDelimiter","saveRow","finish","spacesBetweenQuoteAndDelimiter","extraSpaces","spacesBetweenQuoteAndNewLine","spaceLength","textBetweenClosingQuoteAndIndex","newCursor","stopped","linebreak","truncated","newLine","nextQuoteSearch","nextNextDelim","workerUrl","onmessage","mainThreadReceivedMessage","handle","completeWorker","notImplemented","terminate","workerThreadReceivedMessage","cpy","asn1","certificate","RSAPrivateKey","define","seq","int","RSAPublicKey","PublicKey","use","AlgorithmIdentifier","bitstr","objid","null_","optional","PrivateKeyInfo","octstr","PrivateKey","EncryptedPrivateKeyInfo","EncryptedPrivateKey","DSAPrivateKey","DSAparam","ECPrivateKey","explicit","ECParameters","choice","namedCurve","signature","asn","Time","utcTime","utctime","generalTime","gentime","AttributeTypeValue","any","SubjectPublicKeyInfo","RelativeDistinguishedName","setof","RDNSequence","seqof","Name","rdnSequence","Validity","Extension","bool","def","TBSCertificate","implicit","X509Certificate","findProc","startRegex","fullRegex","evp","ciphers","okey","password","decrypted","suite","iv","cipherText","cipherKey","out","cipher","createDecipheriv","update","final","match2","tag","aesid","fixProc","compat","parseKeys","isBuffer","passphrase","subtype","ndata","stripped","decode","tbsCertificate","subjectPublicKeyInfo","algorithm","subjectPublicKey","subjectPrivateKey","params","pub_key","salt","decrypt","kde","kdeparams","iters","algo","keylen","pbkdf2Sync","curve","privateKey","priv_key","parameters","isarray","pathToRegexp","compile","tokensToFunction","tokensToRegExp","PATH_REGEXP","tokens","path","defaultDelimiter","exec","escaped","prefix","capture","group","modifier","asterisk","partial","repeat","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","pretty","encodeURIComponent","token","segment","attachKeys","sensitive","strict","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","native","checkParameters","defaultEncoding","toBuffer","iterations","digest","pbkdf2","ZERO_BUF","sync","subtle","toBrowser","sha","sha1","sha256","sha384","sha512","checks","browserPbkdf2","importKey","then","deriveBits","hash","Promise","process","nextTick","promise","resolvePromise","browser","resolve","prom","alloc","catch","checkNative","resp","version","MAX_ALLOC","sizes","md5","sha224","rmd160","ripemd160","createHmac","DK","block1","destPos","hLen","writeUInt32BE","thing","ArrayBuffer","isView","isBrowser","navigator","timeoutDuration","longerTimeoutBrowsers","userAgent","microtaskDebounce","called","taskDebounce","scheduled","debounce","functionToCheck","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflowX","overflowY","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","findCommonOffsetParent","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","getBordersSize","styles","axis","sideA","sideB","getSize","computedStyle","getWindowSizes","classCallCheck","instance","Constructor","createClass","defineProperties","descriptor","protoProps","staticProps","_extends","getClientRect","offsets","getBoundingClientRect","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","area","sort","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","getOuterSizes","getOppositePlacement","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","cur","runModifiers","modifiers","ends","console","warn","enabled","isDestroyed","arrowStyles","attributes","flipped","positionFixed","flip","originalPlacement","isCreated","onCreate","isModifierEnabled","modifierName","getSupportedPropertyName","prefixes","upperProp","toCheck","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","scrollParents","isBody","addEventListener","passive","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","_data$offsets","round","floor","noRound","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","_requesting","requested","_data$offsets$arrow","querySelector","sideCapitalized","side","altSide","opSide","arrowElementSize","popperMarginSide","popperBorderSide","sideValue","getOppositeVariation","placements","validPlacements","clockwise","counter","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","parseOffset","basePlacement","useHeight","fragments","frag","divider","search","splitRegex","ops","mergeWithPrevious","index2","preventOverflow","transformProp","popperStyles","priority","primary","escapeWithReference","secondary","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","Defaults","onLoad","Popper","requestAnimationFrame","jquery","Utils","PopperUtils","factory","arg1","arg2","arg3","args","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","array","noop","title","env","argv","versions","addListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","ReactPropTypes","number","symbol","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"mappings":"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","file":"js/goldeimer-133.cjs.js","sourcesContent":["'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict';var React=require('react'),_inheritsLoose=require('@babel/runtime/helpers/inheritsLoose'),PropTypes=require('prop-types'),warning=require('tiny-warning');function _interopDefaultLegacy(e){return e&&typeof e==='object'&&'default'in e?e:{'default':e}}var React__default=/*#__PURE__*/_interopDefaultLegacy(React);var _inheritsLoose__default=/*#__PURE__*/_interopDefaultLegacy(_inheritsLoose);var PropTypes__default=/*#__PURE__*/_interopDefaultLegacy(PropTypes);var warning__default=/*#__PURE__*/_interopDefaultLegacy(warning);var MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nfunction getUniqueId() {\n  var key = '__global_unique_id__';\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n}\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + getUniqueId() + '__';\n\n  var Provider = /*#__PURE__*/function (_Component) {\n    _inheritsLoose__default['default'](Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning__default['default']((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(React.Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes__default['default'].object.isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_Component2) {\n    _inheritsLoose__default['default'](Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(React.Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes__default['default'].object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}var index = React__default['default'].createContext || createReactContext;module.exports=index;","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","module.exports = '23456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnpqrstwxyz';","const generate = require('nanoid/generate');\r\nconst nolookalikes = require('nanoid-dictionary/nolookalikes');\r\n\r\nmodule.exports = generate.bind(null, nolookalikes);","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  var mask = (2 << 31 - Math.clz32((alphabet.length - 1) | 1)) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n","var random = require('./random')\nvar format = require('./format')\n\n/**\n * Low-level function to change alphabet and ID size.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {string} alphabet Symbols to be used in ID.\n * @param {number} size The number of symbols in ID.\n *\n * @return {string} Unique ID.\n *\n * @example\n * const generate = require('nanoid/generate')\n * model.id = generate('0123456789абвгдеё', 5) //=> \"8ё56а\"\n *\n * @name generate\n * @function\n */\nmodule.exports = format.bind(null, random)\n","var crypto = require('crypto')\n\nif (crypto.randomFillSync) {\n  // We reuse buffers with the same size to avoid memory fragmentations\n  // for better performance\n  var buffers = { }\n  module.exports = function (bytes) {\n    var buffer = buffers[bytes]\n    if (!buffer) {\n      // `Buffer.allocUnsafe()` faster because it don’t clean memory.\n      // We do not need it, since we will fill memory with new bytes anyway.\n      buffer = Buffer.allocUnsafe(bytes)\n      if (bytes <= 255) buffers[bytes] = buffer\n    }\n    return crypto.randomFillSync(buffer)\n  }\n} else {\n  module.exports = crypto.randomBytes\n}\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./notistack.cjs.production.min.js')\n} else {\n  module.exports = require('./notistack.cjs.development.js')\n}\n","\"use strict\";function e(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0});var n=require(\"react\"),t=e(n),r=require(\"react-dom\"),a=e(require(\"clsx\")),o=require(\"@material-ui/core/styles\"),i=e(require(\"@material-ui/core/Snackbar\")),c=e(require(\"@material-ui/core/Slide\")),s=e(require(\"@material-ui/core/Collapse\")),u=e(require(\"@material-ui/core/SvgIcon\")),l=e(require(\"hoist-non-react-statics\"));function p(){return(p=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function d(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n.indexOf(t=o[r])>=0||(a[t]=e[t]);return a}var f=t.createContext(),m={root:{},anchorOriginTopCenter:{},anchorOriginBottomCenter:{},anchorOriginTopRight:{},anchorOriginBottomRight:{},anchorOriginTopLeft:{},anchorOriginBottomLeft:{}},g={containerRoot:{},containerAnchorOriginTopCenter:{},containerAnchorOriginBottomCenter:{},containerAnchorOriginTopRight:{},containerAnchorOriginBottomRight:{},containerAnchorOriginTopLeft:{},containerAnchorOriginBottomLeft:{}},h=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},k=function(e){return Object.keys(e).filter((function(e){return!g[e]})).reduce((function(n,t){var r;return p({},n,((r={})[t]=e[t],r))}),{})},v=function(e){return!!e||0===e},b={variant:\"default\",autoHideDuration:5e3,anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"}},x=function(e){return\"number\"==typeof e||null===e},y={CLICKAWAY:\"clickaway\",MAXSNACK:\"maxsnack\",INSTRUCTED:\"instructed\"},C=function(e){var n;return o.createStyles({root:(n={display:\"flex\",flexWrap:\"wrap\",flexGrow:1},n[e.breakpoints.up(\"sm\")]={flexGrow:\"initial\",minWidth:288},n)})},E=n.forwardRef((function(e,n){var r=e.classes,o=e.className,i=d(e,[\"classes\",\"className\"]);return t.createElement(\"div\",Object.assign({ref:n,className:a(r.root,o)},i))})),S=o.withStyles(C)(E),O={right:\"left\",left:\"right\",bottom:\"up\",top:\"down\"},D=function(e){return\"center\"!==e.horizontal?O[e.horizontal]:O[e.vertical]},w=function(e){var n=Object.keys(e).filter((function(e){return void 0!==m[e]})).reduce((function(n,t){var r;return p({},n,((r={})[t]=e[t],r))}),{});return p({},n,{root:a(e.root,e.wrappedRoot)})},L=function(e,n){return{container:e.collapseContainer,wrapper:a(e.collapseWrapper,n&&e.collapseWrapperDense)}};function q(e,n){return e.reduce((function(e,t){return null==t?e:function(){for(var r=arguments.length,a=new Array(r),o=0;o<r;o++)a[o]=arguments[o];var i=[].concat(a);n&&-1===i.indexOf(n)&&i.push(n),e.apply(this,i),t.apply(this,i)}}),(function(){}))}var T=function(e){var n,t=o.emphasize(e.palette.background.default,\"light\"===e.palette.type?.8:.98);return o.createStyles(p({},m,{lessPadding:{paddingLeft:20},variantSuccess:{backgroundColor:\"#43a047 !important\",color:\"#fff !important\"},variantError:{backgroundColor:\"#d32f2f !important\",color:\"#fff !important\"},variantInfo:{backgroundColor:\"#2196f3 !important\",color:\"#fff !important\"},variantWarning:{backgroundColor:\"#ff9800 !important\",color:\"#fff !important\"},contentRoot:p({},e.typography.body2,{backgroundColor:t,color:e.palette.getContrastText(t),alignItems:\"center\",padding:\"6px 16px\",borderRadius:\"4px\",boxShadow:\"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)\"}),message:{display:\"flex\",alignItems:\"center\",padding:\"8px 0\"},action:{display:\"flex\",alignItems:\"center\",marginLeft:\"auto\",paddingLeft:16,marginRight:-8},wrappedRoot:{position:\"relative\",transform:\"translateX(0)\",top:0,right:0,bottom:0,left:0},collapseContainer:(n={},n[e.breakpoints.down(\"xs\")]={paddingLeft:e.spacing(1),paddingRight:e.spacing(1)},n),collapseWrapper:{transition:e.transitions.create([\"margin-bottom\"],{easing:\"ease\"}),marginTop:6,marginBottom:6},collapseWrapperDense:{marginTop:2,marginBottom:2}}))},A=function(e){var r=e.classes,o=d(e,[\"classes\"]),u=n.useRef(),l=n.useState(!0),f=l[0],m=l[1];n.useEffect((function(){return function(){u.current&&clearTimeout(u.current)}}),[]);var g=q([o.snack.onClose,o.onClose],o.snack.key),k=[\"onEnter\",\"onEntering\",\"onEntered\",\"onExit\",\"onExiting\",\"onExited\"].reduce((function(e,n){var t;return p({},e,((t={})[n]=q([o.snack[n],o[n]],o.snack.key),t))}),{}),v=o.action,b=o.content,x=o.ariaAttributes,C=o.className,E=o.hideIconVariant,O=o.iconVariant,T=o.snack,A=o.dense,R=o.TransitionComponent,I=void 0===R?c:R,N=o.TransitionProps,H=void 0===N?{}:N,j=d(o,[\"action\",\"content\",\"ariaAttributes\",\"className\",\"hideIconVariant\",\"iconVariant\",\"snack\",\"dense\",\"TransitionComponent\",\"TransitionProps\"]),M=T.key,V=T.className,P=T.variant,z=T.content,W=T.action,B=T.ariaAttributes,X=T.anchorOrigin,_=T.TransitionProps,K=void 0===_?{}:_,U=d(T,[\"key\",\"persist\",\"entered\",\"requestClose\",\"className\",\"variant\",\"content\",\"action\",\"ariaAttributes\",\"anchorOrigin\",\"TransitionProps\"]),Z=O[P],Q=p({\"aria-describedby\":\"client-snackbar\"},x,{},B),G=p({direction:D(X)},H,{},K,{onExited:function(){u.current=setTimeout((function(){m(!f)}),125)}}),Y=W||v;\"function\"==typeof Y&&(Y=Y(M));var F=z||b;return F&&\"function\"==typeof F&&(F=F(M,T.message)),t.createElement(s,{unmountOnExit:!0,timeout:175,in:f,classes:L(r,A),onExited:k.onExited},t.createElement(i,Object.assign({TransitionComponent:I},j,U,{open:T.open,anchorOrigin:X,TransitionProps:G,classes:w(r),onClose:g,onExit:k.onExit,onExiting:k.onExiting,onEnter:k.onEnter,onEntering:k.onEntering,onEntered:q([k.onEntered,function(){o.snack.requestClose&&g(null,y.INSTRCUTED)}])}),F||t.createElement(S,Object.assign({},Q,{role:\"alert\",className:a(r.contentRoot,r[\"variant\"+h(P)],C,V,!E&&Z&&r.lessPadding)}),t.createElement(\"div\",{id:Q[\"aria-describedby\"],className:r.message},E?null:Z,T.message),Y&&t.createElement(\"div\",{className:r.action},Y))))},R=o.withStyles(T)(A),I=o.makeStyles((function(e){var n,t;return{root:(n={boxSizing:\"border-box\",display:\"flex\",maxHeight:\"100%\",maxWidth:\"100%\",position:\"fixed\",flexDirection:\"column\",zIndex:e.zIndex.snackbar,height:\"auto\",width:\"auto\",minWidth:288,transition:e.transitions.create([\"top\",\"right\",\"bottom\",\"left\"],{easing:\"ease\"})},n[e.breakpoints.down(\"xs\")]={left:\"0 !important\",right:\"0 !important\",width:\"100%\"},n),reverseColumns:{flexDirection:\"column-reverse\"},top:{top:14},topDense:{top:2},bottom:{bottom:14},bottomDense:{bottom:2},left:{left:20},leftDense:{left:4},right:{right:20},rightDense:{right:4},center:(t={left:\"50%\",transform:\"translateX(-50%)\"},t[e.breakpoints.down(\"xs\")]={transform:\"translateX(0)\"},t)}})),N=function(e){var n=I(),r=e.className,o=e.anchorOrigin,i=e.dense,c=d(e,[\"className\",\"anchorOrigin\",\"dense\"]),s=a(n.root,n[o.vertical],n[o.horizontal],n[o.vertical+(i?\"Dense\":\"\")],n[o.horizontal+(i?\"Dense\":\"\")],r,\"bottom\"===o.vertical&&n.reverseColumns);return t.createElement(\"div\",Object.assign({className:s},c))},H=t.memo(N),j=function(e){return t.createElement(u,Object.assign({},e),t.createElement(\"path\",{d:\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\"}))},M=function(e){return t.createElement(u,Object.assign({},e),t.createElement(\"path\",{d:\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\"}))},V=function(e){return t.createElement(u,Object.assign({},e),t.createElement(\"path\",{d:\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\"}))},P=function(e){return t.createElement(u,Object.assign({},e),t.createElement(\"path\",{d:\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\\n        0 22,12A10,10 0 0,0 12,2Z\"}))},z={fontSize:20,marginInlineEnd:8},W={success:t.createElement(j,{style:z}),warning:t.createElement(M,{style:z}),error:t.createElement(V,{style:z}),info:t.createElement(P,{style:z})},B=function(e){var n,o,i;function c(n){var t;return(t=e.call(this,n)||this).enqueueSnackbar=function(e,n){var r=void 0===n?{}:n,a=r.key,o=r.preventDuplicate,i=d(r,[\"key\",\"preventDuplicate\"]),c=v(a),s=c?a:(new Date).getTime()+Math.random(),u=function(e,n,t){return function(r){return\"autoHideDuration\"===r?x(e.autoHideDuration)?e.autoHideDuration:x(n.autoHideDuration)?n.autoHideDuration:b.autoHideDuration:e[r]||n[r]||t[r]}}(i,t.props,b),l=p({key:s},i,{message:e,open:!0,entered:!1,requestClose:!1,variant:u(\"variant\"),anchorOrigin:u(\"anchorOrigin\"),autoHideDuration:u(\"autoHideDuration\")});return i.persist&&(l.autoHideDuration=void 0),t.setState((function(n){if(void 0===o&&t.props.preventDuplicate||o){var r=function(n){return c?n.key===a:n.message===e},i=n.queue.findIndex(r)>-1,s=n.snacks.findIndex(r)>-1;if(i||s)return n}return t.handleDisplaySnack(p({},n,{queue:[].concat(n.queue,[l])}))})),s},t.handleDisplaySnack=function(e){return e.snacks.length>=t.maxSnack?t.handleDismissOldest(e):t.processQueue(e)},t.processQueue=function(e){var n=e.queue;return n.length>0?p({},e,{snacks:[].concat(e.snacks,[n[0]]),queue:n.slice(1,n.length)}):e},t.handleDismissOldest=function(e){if(e.snacks.some((function(e){return!e.open||e.requestClose})))return e;var n=!1,r=!1;e.snacks.reduce((function(e,n){return e+(n.open&&n.persist?1:0)}),0)===t.maxSnack&&(r=!0);var a=e.snacks.map((function(e){return n||e.persist&&!r?p({},e):(n=!0,e.entered?(e.onClose&&e.onClose(null,y.MAXSNACK,e.key),t.props.onClose&&t.props.onClose(null,y.MAXSNACK,e.key),p({},e,{open:!1})):p({},e,{requestClose:!0}))}));return p({},e,{snacks:a})},t.handleEnteredSnack=function(e,n,r){if(!v(r))throw new Error(\"handleEnteredSnack Cannot be called with undefined key\");t.setState((function(e){return{snacks:e.snacks.map((function(e){return e.key===r?p({},e,{entered:!0}):p({},e)}))}}))},t.handleCloseSnack=function(e,n,r){if(t.props.onClose&&t.props.onClose(e,n,r),n!==y.CLICKAWAY){var a=void 0===r;t.setState((function(e){var n=e.queue;return{snacks:e.snacks.map((function(e){return a||e.key===r?p({},e,e.entered?{open:!1}:{requestClose:!0}):p({},e)})),queue:n.filter((function(e){return e.key!==r}))}}))}},t.closeSnackbar=function(e){var n=t.state.snacks.find((function(n){return n.key===e}));v(e)&&n&&n.onClose&&n.onClose(null,y.INSTRUCTED,e),t.handleCloseSnack(null,y.INSTRUCTED,e)},t.handleExitedSnack=function(e,n,r){var a=n||r;if(!v(a))throw new Error(\"handleExitedSnack Cannot be called with undefined key\");t.setState((function(e){var n=t.processQueue(p({},e,{snacks:e.snacks.filter((function(e){return e.key!==a}))}));return 0===n.queue.length?n:t.handleDismissOldest(n)}))},t.state={snacks:[],queue:[],contextValue:{enqueueSnackbar:t.enqueueSnackbar,closeSnackbar:t.closeSnackbar}},t}return o=e,(n=c).prototype=Object.create(o.prototype),n.prototype.constructor=n,n.__proto__=o,c.prototype.render=function(){var e=this,n=this.state.contextValue,o=this.props,i=o.domRoot,c=o.children,s=o.classes,u=void 0===s?{}:s,l=o.dense,m=void 0!==l&&l,g=o.hideIconVariant,v=void 0!==g&&g,b=d(o,[\"variant\",\"maxSnack\",\"anchorOrigin\",\"preventDuplicate\",\"domRoot\",\"children\",\"classes\",\"dense\",\"hideIconVariant\"]),x=this.state.snacks.reduce((function(e,n){var t,r,a=\"\"+h((r=n.anchorOrigin).vertical)+h(r.horizontal);return p({},e,((t={})[a]=[].concat(e[a]||[],[n]),t))}),{}),y=p({},W,{},this.props.iconVariant),C=Object.keys(x).map((function(n){var r=x[n];return t.createElement(H,{key:n,dense:m,anchorOrigin:r[0].anchorOrigin,className:a(u.containerRoot,u[\"containerAnchorOrigin\"+n])},r.map((function(n){return t.createElement(R,Object.assign({},b,{key:n.key,dense:m,snack:n,hideIconVariant:v,iconVariant:y,classes:k(u),onClose:e.handleCloseSnack,onExited:q([e.handleExitedSnack,e.props.onExited]),onEntered:q([e.handleEnteredSnack,e.props.onEntered])}))})))}));return t.createElement(f.Provider,{value:n},c,i?r.createPortal(C,i):C)},(i=[{key:\"maxSnack\",get:function(){return this.props.maxSnack||3}}])&&function(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}(c.prototype,i),c}(n.Component);exports.SnackbarContent=S,exports.SnackbarProvider=B,exports.useSnackbar=function(){return n.useContext(f)},exports.withSnackbar=function(e){var n=t.forwardRef((function(n,r){return t.createElement(f.Consumer,null,(function(a){return t.createElement(e,p({},n,{ref:r,enqueueSnackbar:a.enqueueSnackbar,closeSnackbar:a.closeSnackbar}))}))}));return l(n,e),n};\n//# sourceMappingURL=notistack.cjs.production.min.js.map\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","/* @license\nPapa Parse\nv5.3.0\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n\t// in strict mode we cannot access arguments.callee, so we need a named reference to\n\t// stringify the factory method for the blob worker\n\t// eslint-disable-next-line func-name\n}(this, function moduleFactory()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tfunction getWorkerBlob() {\n\t\tvar URL = global.URL || global.webkitURL || null;\n\t\tvar code = moduleFactory.toString();\n\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob(['(', code, ')();'], {type: 'text/javascript'})));\n\t}\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = IS_WORKER && /blob:/i.test((global.location || {}).protocol);\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\t}\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\n\t\tvar _escapedQuote = _quoteChar + _quoteChar;\n\n\t\t/** whether to skip empty lines */\n\t\tvar _skipEmptyLines = false;\n\n\t\t/** the columns (keys) we expect when we unparse objects */\n\t\tvar _columns = null;\n\n\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\n\t\tvar _escapeFormulae = false;\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (Array.isArray(_input))\n\t\t{\n\t\t\tif (!_input.length || Array.isArray(_input[0]))\n\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(_columns || objectKeys(_input[0]), _input, _skipEmptyLines);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (Array.isArray(_input.data))\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: objectKeys(_input.data[0]);\n\n\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow new Error('Unable to serialize unrecognized input');\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| typeof _config.quotes === 'function'\n\t\t\t\t|| Array.isArray(_config.quotes))\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\n\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\n\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\n\t\t\tif (Array.isArray(_config.columns)) {\n\n\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\n\n\t\t\t\t_columns = _config.columns;\n\t\t\t}\n\n\t\t\tif (_config.escapeChar !== undefined) {\n\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\n\t\t\t}\n\n\t\t\tif (typeof _config.escapeFormulae === 'boolean')\n\t\t\t\t_escapeFormulae = _config.escapeFormulae;\n\t\t}\n\n\n\t\t/** Turns an object's keys into an array */\n\t\tfunction objectKeys(obj)\n\t\t{\n\t\t\tif (typeof obj !== 'object')\n\t\t\t\treturn [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in obj)\n\t\t\t\tkeys.push(key);\n\t\t\treturn keys;\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data, skipEmptyLines)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tvar emptyLine = false;\n\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\n\t\t\t\tif (skipEmptyLines && !hasHeader)\n\t\t\t\t{\n\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\n\t\t\t\t}\n\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\n\t\t\t\t\tvar line = [];\n\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\n\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\n\t\t\t\t\t\tline.push(data[row][cx]);\n\t\t\t\t\t}\n\t\t\t\t\temptyLine = line.join('').trim() === '';\n\t\t\t\t}\n\t\t\t\tif (!emptyLine)\n\t\t\t\t{\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (col > 0 && !nullLine)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t\t}\n\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\n\t\t\t\t\t{\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tif (_escapeFormulae === true && typeof str === \"string\" && (str.match(/^[=+\\-@].*$/) !== null)) {\n\t\t\t\tstr = \"'\" + str;\n\t\t\t}\n\n\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\n\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\n\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._halted = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\t\t\tthis._halted = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\tthis._halted = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\t\tthis._halted = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send(this._config.downloadRequestBody);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\n\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk;\n\t\t\tif(size) {\n\t\t\t\tchunk = remaining.substring(0, size);\n\t\t\t\tremaining = remaining.substring(size);\n\t\t\t} else {\n\t\t\t\tchunk = remaining;\n\t\t\t\tremaining = '';\n\t\t\t}\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tif (!stream.push(data) && !this._handle.paused()) {\n\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t// so we need to pause until more items\n\t\t\t\t// can be processed\n\t\t\t\tthis._handle.pause();\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\t}\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar MAX_FLOAT = Math.pow(2, 53);\n\t\tvar MIN_FLOAT = -MAX_FLOAT;\n\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/;\n\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse {\n\t\t\t\t\t\t_results.data = _results.data[0];\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\n\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\n\t\t\t// otherwise we can get duplicate content within a row\n\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tif(self.streamer._halted) {\n\t\t\t\t_paused = false;\n\t\t\t\tself.streamer.parseChunk(_input, true);\n\t\t\t} else {\n\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\n\t\t\t\t// wait for it to halt in order to resume\n\t\t\t\tsetTimeout(self.resume, 3);\n\t\t\t}\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction testFloat(s) {\n\t\t\tif (FLOAT.test(s)) {\n\t\t\t\tvar floatValue = parseFloat(s);\n\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\tif (testEmptyLine(_results.data[i]))\n\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\n\t\t\tfunction addHeader(header, i)\n\t\t\t{\n\t\t\t\tif (isFunction(_config.transformHeader))\n\t\t\t\t\theader = _config.transformHeader(header, i);\n\n\t\t\t\t_fields.push(header);\n\t\t\t}\n\n\t\t\tif (Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\t\t_results.data[i].forEach(addHeader);\n\n\t\t\t\t_results.data.splice(0, 1);\n\t\t\t}\n\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\n\t\t\telse\n\t\t\t\t_results.data.forEach(addHeader);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (testFloat(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfunction processRow(rowSource, i)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < rowSource.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = rowSource[j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\n\t\t\tvar incrementBy = 1;\n\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\t_results.data = _results.data.map(processRow);\n\t\t\t\tincrementBy = _results.data.length;\n\t\t\t}\n\t\t\telse\n\t\t\t\t_results.data = processRow(_results.data, 0);\n\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += incrementBy;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\n\n\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\n\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\n\t\t\t\tvar delim = delimitersToGuess[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 0) {\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\n\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t\tmaxFieldCount = avgFieldCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction guessLineEndings(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\tvar error = {\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg\n\t\t\t};\n\t\t\tif(row !== undefined) {\n\t\t\t\terror.row = row;\n\t\t\t}\n\t\t\t_results.errors.push(error);\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\tif (config.quoteChar === undefined) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow new Error('Comment character same as delimiter');\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow new Error('Input must be a string');\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\n\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\n\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\t// we check, if we have quotes, because delimiter char may be part of field enclosed in quotes\n\t\t\t\t\tif (quoteSearch > nextDelim) {\n\t\t\t\t\t\t// we have quotes, so we try to find the next delimiter not enclosed in quotes and also next starting quote char\n\t\t\t\t\t\tvar nextDelimObj = getNextUnquotedDelimiter(nextDelim, quoteSearch, nextNewline);\n\n\t\t\t\t\t\t// if we have next delimiter char which is not enclosed in quotes\n\t\t\t\t\t\tif (nextDelimObj && typeof nextDelimObj.nextDelim !== 'undefined') {\n\t\t\t\t\t\t\tnextDelim = nextDelimObj.nextDelim;\n\t\t\t\t\t\t\tquoteSearch = nextDelimObj.quoteSearch;\n\t\t\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t\t\t// we look for next delimiter char\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substring(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\n\t\t\t/** Gets the delimiter character, which is not inside the quoted field */\n\t\t\tfunction getNextUnquotedDelimiter(nextDelim, quoteSearch, newLine) {\n\t\t\t\tvar result = {\n\t\t\t\t\tnextDelim: undefined,\n\t\t\t\t\tquoteSearch: undefined\n\t\t\t\t};\n\t\t\t\t// get the next closing quote character\n\t\t\t\tvar nextQuoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t// if next delimiter is part of a field enclosed in quotes\n\t\t\t\tif (nextDelim > quoteSearch && nextDelim < nextQuoteSearch && (nextQuoteSearch < newLine || newLine === -1)) {\n\t\t\t\t\t// get the next delimiter character after this one\n\t\t\t\t\tvar nextNextDelim = input.indexOf(delim, nextQuoteSearch);\n\n\t\t\t\t\t// if there is no next delimiter, return default result\n\t\t\t\t\tif (nextNextDelim === -1) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t\t// find the next opening quote char position\n\t\t\t\t\tif (nextNextDelim > nextQuoteSearch) {\n\t\t\t\t\t\tnextQuoteSearch = input.indexOf(quoteChar, nextQuoteSearch + 1);\n\t\t\t\t\t}\n\t\t\t\t\t// try to get the next delimiter position\n\t\t\t\t\tresult = getNextUnquotedDelimiter(nextNextDelim, nextQuoteSearch, newLine);\n\t\t\t\t} else {\n\t\t\t\t\tresult = {\n\t\t\t\t\t\tnextDelim: nextDelim,\n\t\t\t\t\t\tquoteSearch: quoteSearch\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\n\t\tvar workerUrl = getWorkerBlob();\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: msg.results.data[i],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow new Error('Not implemented.');\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = Array.isArray(obj) ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict'\n\nvar asn1 = require('asn1.js')\n\nexports.certificate = require('./certificate')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict'\n\nvar asn = require('asn1.js')\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional(),\n    this.key('curve').objid().optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int().optional(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = Buffer.from(match[2], 'hex')\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n","var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","var native = require('crypto')\n\nvar checkParameters = require('./lib/precondition')\nvar defaultEncoding = require('./lib/default-encoding')\nvar toBuffer = require('./lib/to-buffer')\n\nfunction nativePBKDF2 (password, salt, iterations, keylen, digest, callback) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = 'sha1'\n  }\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  return native.pbkdf2(password, salt, iterations, keylen, digest, callback)\n}\n\nfunction nativePBKDF2Sync (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  digest = digest || 'sha1'\n  return native.pbkdf2Sync(password, salt, iterations, keylen, digest)\n}\n\n/* istanbul ignore next */\nif (!native.pbkdf2Sync || native.pbkdf2Sync.toString().indexOf('keylen, digest') === -1) {\n  exports.pbkdf2Sync = require('./lib/sync')\n  exports.pbkdf2 = require('./lib/async')\n\n// native\n} else {\n  exports.pbkdf2Sync = nativePBKDF2Sync\n  exports.pbkdf2 = nativePBKDF2\n}\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nvar createHmac = require('create-hmac')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = createHmac(digest, password).update(block1).digest()\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = createHmac(digest, password).update(U).digest()\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.16.1-lts\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Popper = factory());\n}(this, (function () { 'use strict';\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n\nvar timeoutDuration = function () {\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}();\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nfunction getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.width;\n  var height = sizes.height || element.clientHeight || result.height;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop);\n    var marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nreturn Popper;\n\n})));\n//# sourceMappingURL=popper.js.map\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"sourceRoot":""}